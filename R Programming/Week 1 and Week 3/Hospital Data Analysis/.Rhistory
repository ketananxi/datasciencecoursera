c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
z<-c(z,555)
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-q)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
getwd()
ls()
x<-9
ls
ls()
dir()
list.files()
?list.files
args()
args(list.files)
old.dir="C:\Users\HP\Documents"
old.dir="C:/Users/HP/Documents"
old.dir<-getwd()
testdir<-dir.create()
dir.create()
dir.create(testdir)
?dir.create()
old.dir<-dir.create(testdir)
mkdir testdir
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R",to,"mytest3.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
>dir.create()
>dir.create
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2",recursive = TRUE)
setwd<-old.dir
setwd(old.dir)
unlink("testdir",recursive = TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5 )
seq(5,10,length=30)
info
my_seq<=- seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(myS)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-0.5,55,-10,6
num_vect<-c(0.5,55,-10,6)
tf<-(num_vect-1)
tf<-num_vect<1
tf
num_vect>=6
c("My","name","is")
my_char("My","name","is")
my_char<-("My","name","is")
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
c(my_char,"Ketan")
my_name<-c(my_char,"Ketan")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!",sep = " ")
pas
a<-c("X","Y","Z")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
quit
invFunc <- solve(data, ...)
swirl
swirl()
swril()
library(swirl)
swirl()
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
--my_data<-sample(c(y,z),100)
my_data<-sample(c(y,z),100)
my_na<-is.na("my_data")
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my-data
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes()
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix<-matrix(c(1:20),nrow = 4,ncol = 5)
my_matrix2<-matrix(data=1:20,nrow = 4,ncol = 5)
my_matrix2
identical(my_matrix,my_matrix2)
patients<-c("Bill,"Gina","Kelly","Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cname<-c("patient","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<-cnames
my_data
library(swirl)
swrirl()
swirl()
FALSE & FALSE
TRUE & C(TRUE,FALSE,FALSE)
TRUE && C(TRUE,FALSE,FALSE)
TRUE & C(TRUE, FALSE, FALSE)
TRUE
TRUE & C(TRUE, FALSE, FALSE)
TRUE & C(TRUE, FALSE, FALSE)
C(TRUE, FALSE, FALSE)
C(TRUE, FALSE, FALSE)
c(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twina','twins')
identical('twins','twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints>5
which(c(ints>7))
which(c('ints>7))
ds
fsd
ddsc
asa
v
ds
dsv
d
ds
ds
ds
d
end
clearPushBack()
exit
/
`
1
2
az
a
xasx
cddddddddd
library(swirl)
swirl()
which(c('ints>7'))
which(c(ints>7))
which(ints>7)
any()
all(ints > 0)
any(ints < 0)
all(ints > 0)
library(swirl)
swirl()
Sys.Date()
mean<-function(x,y,z)
{}
mean(c(2,4,5))
submit()
source(boring_function.R)
source("boring_function.R")
source('boring_function.R')
boring_function
boring_function(2)
boring_function
1
library(swirl)
swirl()
source(boring_function)
source("boring_function.R")
submit()
library(swirl)
swirl()
submit()
}
library(swirl)
swirl()
# }
library(swirl)
swirl()
x
source('C:/Users/HP/AppData/Local/Temp/RtmpikRzhs/boring_function.R')
submit()
library(swirl)
swirl()
boring_function <- function(x) {
x
}
boring_function(1)
source('C:/Users/HP/AppData/Local/Temp/RtmpikRzhs/boring_function.R')
source('C:/Users/HP/AppData/Local/Temp/RtmpikRzhs/boring_function.R')
source('C:/Users/HP/AppData/Local/Temp/RtmpikRzhs/boring_function.R')
source('C:/Users/HP/AppData/Local/Temp/RtmpikRzhs/boring_function.R')
submit()
library(swirl)
swirl()
source('C:/Users/HP/AppData/Local/Temp/RtmpikRzhs/boring_function.R')
submit
submit()
library(swirl)
View(submit)
swirl()
submit()
library(swirl)
submit()
library(swirl)
swirl()
source('C:/Users/HP/AppData/Local/Temp/RtmpWsRxXM/boring_function.R')
View(pollutantmean)
View(pollutantmean)
View(pollutantmean)
View(submit)
boring_function('My first function!')
boring_function
View(submit)
View(submit)
my_mean(c(4, 5, 10))
View(submit)
View(submit)
View(submit)
View(submit)
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=5)
remainder(4,div=2)
args(remainder)
View(submit)
View(submit)
View(submit)
View(submit)
evaluate()
evaluate(sd)
View(submit)
View(submit)
info()
evaluate(sd)
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]})
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("programming","is","fun!")
paste("Programming","is","fun!")
View(submit)
View(submit)
telegram
telegram()
telegram("hello","fasda")
telegram()
View(submit)
View(submit)
View(submit)
mad_libs(adjective = "das", place = "dsa", noun = "sdas")
mad_libs(adjective = "", place = "", noun = "")
mad_libs(adjective = "", place = "", noun = "")
mad_libs(adjective = "sadsa", place = "sdas", noun = "sada")
mad_libs
expr_uses_func('mad_libs')
View(submit)
mad_libs()
View(submit)
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"I" %p% "love" %p% "R!"
library(swirl)
swirl()
head(flags)
dim(flasg)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head()
head(1:6)
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5,5, 6, 6)).
unique(c(3, 4, 5, 5,5, 6, 6))
unique_vals<-lapply(unique)
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class,
| character(1))
vapply(flags, class, character(1))
?tapp;y
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names
names(plants)
head()
head(plants)
head(plants,10)
tail()
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str()
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replace = TRUE,prob=c(0.3,0.7))
flips
sum(flips(1))
sum(flips
{}
sum(flips)
?rbinorm
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(0,1, size = 100, prob = 0.7)
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm()
rnorm(n,mean=100,sd=1)
rnorm(10,mean=100,sd=1)
rnorm(10,mean=100,sd=25)
rpois()
rpois(mean=10)
rpois(10)
?rpois
rpois(5,mean=10)
rpois(5,mean)
rpois(5,mean(10))
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
d2
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x =cars$speed, y = cars$dist)
plot()
plot(dist ~ speed, cars)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab =stop")
{}
plot(x = cars$speed, y = cars$dist, xlab =stop")
plot(x = cars$speed, y = cars$dist, xlab ="stop")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance",main = "My Plot")
plot(cars, main = "My Plot")
plot(cars,subtitle)
plot(cars, main = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2
)
mtcars
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl and data=mtcars)
boxplot(formula=mpg~cyl, data=mtcars)
hist(mtcars)
hist(mtcars$mpg)
exir
